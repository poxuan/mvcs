<?php

namespace $controller_ns;

$controller_use
use $service_ns\$service_name;
use Illuminate\Http\Request;

/**
 * $controller_name
 *
 * @author  $author_info
 * @version $main_version
 * @since   $sub_version
 */
class $controller_name $controller_extands
{
    // protected $modular='$table_name';
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request, $service_name $service)
    {
        $result = $service->index($request->all());
        // 
        return response()->json($result);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request, $service_name $service)
    {
        $result = $service->store($request->post());
        return response()->json($result);
    }

    /**
     * Display the specified resource.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($service_name $service,$id)
    {
        $result = $service->show($id);
        return response()->json($result);
    }

    /**
     * Update the specified resource in storage.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $service_name $service, $id)
    {
        $result = $service->update($request->post(), $id);
        return response()->json($result);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $service_name  $service
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($service_name $service, $id)
    {
        $result = $service->destroy($id);
        return response()->json($result);
    }

    /**
     * Change the data status up.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $request_name  $request
     * @return \Illuminate\Http\Response
     */
    public function up($request_name $request)
    {
        $result = $mode::whereIn('id',$request->input('ids'))->up(['status' => 1]);
        $ret = $result ? ['code' => 0, 'message' => ''] : ['code' => 400, 'message' => ''];
        return response()->json($ret);
    }

    /**
     * Change the data status down.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $request_name  $request
     * @return \Illuminate\Http\Response
     */
    public function down(Request $request)
    {
        $result = $mode::whereIn('id',$request->input('ids'))->up(['status' => 0]);
        $ret = $result ? ['code' => 0, 'message' => ''] : ['code' => 400, 'message' => ''];
        return response()->json($ret);
    }

    /**
     * Change the data status down.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $request_name  $request
     * @return \Illuminate\Http\Response
     */
    public function import(Request $request, $service_name $service)
    {
        $file = $request->file('$table_names');
        if (empty($file)) {
            return response()->json(['code'=>-1,'message'=>'请上传文件!']);
        }
        $mimeType = $file->getClientMimeType();
        if ($mimeType == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {
            $type = 'Xlsx';
        } elseif ($mimeType == 'application/vnd.ms-excel') {
            $type = 'Xls';
        } else {
            return response()->json(['code'=>-1,'message'=>'请上传 xls 或 xlsx 文件,不支持的文件类型:'.$mimeType]);
        }
        // 是否覆盖
        $cover = $request->post('cover',false)?true:false;
        // 本地存储
        $path = $file->store('$table_names');
        $result = $service->import(storage_path('app').DIRECTORY_SEPARATOR.$path,$type,$cover);
        return response()->json($result);
    }

    /**
     * 导出模板
     */
    public function template($service_name $service)
    {
        $service->template();
    }
}
