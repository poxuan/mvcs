    /**
     * 导入数据
     *
     * @author $author_info
     * @since  2018-08-07 15:55:54
     * @param string $file_path 文件名
     * @param string $type 文件类型
     * @param bool   $cover 重复数据是否覆盖
     * @return array
     */
    public function import(string $filePath,string $type,bool $cover = false)
    {
        // 默认每次读取1000行数据,可通过构造参数修改.
        $excelService = new ExcelService($type);
        $result = false;
        do {
            $data = $excelService->importData($filePath, $validator_name::excelColumn(), $validator_name::class);
            if ($data) {
                // 额外规则,如:sku字段需要unique
                // $excelService->ruleUnique($data, 'sku');
                // 数据转换,如:将价格转为int以存储.覆盖情况下需要对更新行进行同样处理
                // $this->decimalToIntFor2DArray($data, 'list_price');
                // $this->decimalToIntFor2DArray($excelService->update_lines, 'list_price');
                // 过滤字段
                $unsetColumn = [];
                // 批量导入数据库,成功一次就认为导入成功!
                $result = $excelService->insertToSql($data,$validator_name::excelDefault(), '$table_name', $unsetColumn) || $result;
                if ($cover) {
                    $result = $excelService->updateByModel($model_name::default(), $unsetColumn) || $result; // 加default 防止跨角色更新
                } else {
                    // 将需要更新行设为失败状态
                    $excelService->failUpdateLines();
                }
                // 是否还要导入其他数据
            }
        } while ($excelService->hasMore());
        // 返回所有失败的行
        $this->response['errorlines'] = $excelService->error_lines;
        // 销毁导入文件
        @unlink($filePath);
        if (!$result) {
            $this->response['errcode'] = -1;
            $this->response['errmsg']  = 'Can\'t got any valid data in the file!';
            $this->response['ret']     = false;
        }
        return $this->response;
    }

    /**
     * 导出模板
     *
     * @author $author_info
     * @since  2018-08-07 15:56:10
     */
    public function template()
    {
        $excelService = new ExcelService();
        $excelService->template('$table_name - 模板', $validator_name::excelColumn());
    }