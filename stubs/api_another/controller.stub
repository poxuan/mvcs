<?php

namespace $controller_ns;

$controller_use

use $filter_ns\$filter_name;
use $model_ns\$model_name;
use $request_ns\$request_name;
use $resource_ns\$resource_name;

/**
 * $controller_name
 *
 * @author  $author_info
 * @version 1.0
 * @since   $main_version
 */
class $controller_name $controller_extands
{
    // Custom params
    // protected $modular='$table_name';
    
    /**
     * Display a listing of the resource.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $request_name  $request
     * @return \Illuminate\Http\Response
     */
    public function index($request_name $request)
    {
        $filter = new Filter($request);
        $list = $model_name::filter($filter)->paginate();
        return new $resource_name($list);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $request_name  $request
     * @return \Illuminate\Http\Response
     */
    public function store($request_name $request)
    {
        $result = $mode::save($request->post());
        $ret = $result ? ['code' => 0, 'message' => ''] : ['code' => 400, 'message' => ''];
        return response()->json($ret);
    }

    /**
     * Display the specified resource.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $result = $mode::findOrFail($id);
        return new $resource_name($result);
    }

    /**
     * Update the specified resource in storage.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $request_name  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update($request_name $request, $id)
    {
        $result = $service->update($request->post(), $id);
        $ret = $result ? ['code' => 0, 'message' => ''] : ['code' => 400, 'message' => ''];
        return response()->json($ret);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $request_name  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($request_name $request, $id)
    {
        $result = $mode::destroy($id);
        $ret = $result ? ['code' => 0, 'message' => ''] : ['code' => 400, 'message' => ''];
        return response()->json($ret);
    }

    /**
     * Change the data status up.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $request_name  $request
     * @return \Illuminate\Http\Response
     */
    public function up($request_name $request)
    {
        $result = $mode::whereIn('id',$request->input('ids'))->up(['status' => 1]);
        $ret = $result ? ['code' => 0, 'message' => ''] : ['code' => 400, 'message' => ''];
        return response()->json($ret);
    }

    /**
     * Change the data status down.
     *
     * @author $author_info
     * @since  $sub_version
     * @param  $request_name  $request
     * @return \Illuminate\Http\Response
     */
    public function down(Request $request)
    {
        $result = $mode::whereIn('id',$request->input('ids'))->up(['status' => 0]);
        $ret = $result ? ['code' => 0, 'message' => ''] : ['code' => 400, 'message' => ''];
        return response()->json($ret);
    }
    
}
